FROM ubuntu:24.04 AS battery-base

RUN apt-get update && \
    apt-get install -y --no-install-recommends ca-certificates curl && \
    rm -rf /var/lib/apt/lists/*

{% for version in node_versions %}
FROM battery-base AS battery-node-{{version[0]}}

RUN curl -sSLo node.tar.gz "https://nodejs.org/dist/v{{version[1]}}/node-v{{version[1]}}-linux-x64.tar.gz" && \
    mkdir -p "/opt/node-{{version[0]}}" && tar -xf node.tar.gz --strip-components 1 -C "/opt/node-{{version[0]}}" && \
    rm -rf node.tar.gz && echo 'export PATH="/opt/node-{{version[0]}}/bin:$PATH"' >> /opt/activate-node-{{version[0]}} && \
    chmod +x /opt/activate-node-{{version[0]}} && \
    bash -c 'export PATH="/opt/node-{{version[0]}}/bin:$PATH" && npm install --unsafe-perm=true -g yarn cnpm'

{% endfor %}
{% for version in maven_versions %}
FROM battery-base AS battery-maven-{{version[0].replace('.', '_')}}

RUN curl -sSLo maven.tar.gz "https://archive.apache.org/dist/maven/maven-3/{{version[1]}}/binaries/apache-maven-{{version[1]}}-bin.tar.gz" && \
    mkdir -p "/opt/maven-{{version[0]}}" && tar -xf maven.tar.gz --strip-components 1 -C "/opt/maven-{{version[0]}}" && \
    rm -rf maven.tar.gz && echo 'export PATH="/opt/maven-{{version[0]}}/bin:$PATH"' >> /opt/activate-maven-{{version[0]}} && \
    chmod +x /opt/activate-maven-{{version[0]}}

{% endfor %}
{% for version in jdk_versions %}
FROM battery-base AS battery-jdk-{{version[0]}}

RUN curl -sSLo jdk.tar.gz "{{version[1]}}" && \
    mkdir -p "/opt/jdk-{{version[0]}}" && tar -xf jdk.tar.gz --strip-components 1 -C "/opt/jdk-{{version[0]}}" && \
    rm -rf jdk.tar.gz && echo 'export PATH="/opt/jdk-{{version[0]}}/bin:$PATH"\nexport JAVA_HOME="/opt/jdk-{{version[0]}}"' >> /opt/activate-jdk-{{version[0]}} && \
    chmod +x /opt/activate-jdk-{{version[0]}}

{% endfor %}
FROM battery-base AS battery-jenkins

RUN mkdir -p /opt/jenkins && curl -sSLo /opt/jenkins/jenkins.war "https://get.jenkins.io/war-stable/2.492.3/jenkins.war"

FROM ubuntu:24.04

ENV LANG=zh_CN.UTF-8
ENV TZ=Asia/Shanghai
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends {% for package in apt_packages %}{{package}} {% endfor %}&& \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo $TZ > /etc/timezone && \
    install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc && \
    chmod a+r /etc/apt/keyrings/docker.asc && \
    echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu noble stable" > /etc/apt/sources.list.d/docker.list && \
    apt-get update && \
    apt-get install -y docker-ce-cli docker-buildx-plugin docker-compose-plugin && \
    rm -rf /var/lib/apt/lists/*

{% for version in node_versions %}
COPY --from=battery-node-{{version[0]}} /opt/node-{{version[0]}} /opt/node-{{version[0]}}
COPY --from=battery-node-{{version[0]}} /opt/activate-node-{{version[0]}} /opt/activate-node-{{version[0]}}
{% endfor %}
{% for version in maven_versions %}
COPY --from=battery-maven-{{version[0].replace('.','_')}} /opt/maven-{{version[0]}} /opt/maven-{{version[0]}}
COPY --from=battery-maven-{{version[0].replace('.','_')}} /opt/activate-maven-{{version[0]}} /opt/activate-maven-{{version[0]}}
{% endfor %}
{% for version in jdk_versions %}
COPY --from=battery-jdk-{{version[0]}} /opt/jdk-{{version[0]}} /opt/jdk-{{version[0]}}
COPY --from=battery-jdk-{{version[0]}} /opt/activate-jdk-{{version[0]}} /opt/activate-jdk-{{version[0]}}
{% endfor %}

COPY --from=battery-jenkins /opt/jenkins /opt/jenkins.original

EXPOSE 8080

ENTRYPOINT [ "/usr/bin/tini", "--" ]

ADD run.sh /run.sh

CMD [ "/run.sh" ]
